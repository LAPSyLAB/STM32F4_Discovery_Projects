Demo projekt za USB VComPort in CANBUS povezavo

Dodano je tudi izpis vsebin CANBUS sporočil po protokolu IEX, podjetij Cybrotech in Robotina.

USB COM port izpisuje sporočila in omogoča tudi enostavne nastavitve :
CAN Debug:11 | NADFilt:0
 Examples: d128, N10619, r, h.

d ... debug
N ... NAD filter
r ... reset
h ... help

HW : STM32F4 Discovery na Discovery Shield od podjetja Mikroelektronika,
     ki vsebuje CANBUS PHY vezje. 
     Lahko bi se naredilo enako z zunanjim priklopom PHY čipa. 

Postopek :

1. New project -> STM32 Project -> Board -> 407DISC1
2. CubeMX: Spremeniti USB Host v USB Device :
	Connectivity -> USB_OTG_FS -> Mode v Device Only
	Middleware   -> DEVICE_USB in Class Virtual Com Port
	
3. generirati kodo in dodati naslednje odseke :
	main.c :
		izpis na Micro-USB port 
			/* USER CODE BEGIN PV */
			#define BUFSIZE 256
			char SendBuffer[BUFSIZE];
			
			/* USER CODE END PV */
			
			v glavni zanki :
			snprintf (SendBuffer,BUFSIZE,"USB:2 secs\r\n");
	    	CDC_Transmit_FS(SendBuffer,strlen(SendBuffer));

      		HAL_Delay(2000);
			
		LED diode
			zacetno stanje :
			  /* USER CODE BEGIN 2 */
			  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12,1);
			  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13,0);
			  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14,1);
			  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15,0);
			
			  /* USER CODE END 2 */
			
			
			glavna zanka :	
			
				  /* USER CODE BEGIN WHILE */
				  while (1)
				  {
				
					 HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_12);
					 HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_13);
					 HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_14);
				
					 KeyState = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0);
					 HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15, KeyState);
				
				
					  snprintf(SendBuffer,BUFSIZE,"Hello World [%d]: Key:%d\r\n",Counter++,KeyState);
					  CDC_Transmit_FS(SendBuffer,strlen(SendBuffer));
				
				    /* USER CODE END WHILE */
				
				    /* USER CODE BEGIN 3 */
					  HAL_Delay(1000);
				  }
				  /* USER CODE END 3 */
				  
				  
4. sprejemanje znakov/nizov preko USB Virtual COM Port :
				  
	main.c :
					  
		/* USER CODE BEGIN PV */
		#define BUFSIZE 256
		...
		uint8_t RXbuffer[BUFSIZE];
		volatile uint8_t RXbufferStrLen=0;
		
		/* USER CODE END PV */
		
		  /* Infinite loop */
		  /* USER CODE BEGIN WHILE */
		  while (1)
		  {
		
		...
		
		      // Receive over USB Virtual ComPort
			  if (RXbufferStrLen > 0) {
		
				  snprintf(SendBuffer,BUFSIZE,"USB Shell RX: %s\r\n\0",RXbuffer);
				  CDC_Transmit_FS(SendBuffer,strlen(SendBuffer));
				  RXbufferStrLen = 0;
			  }
		
		    /* USER CODE END WHILE */
		
		    /* USER CODE BEGIN 3 */
		  }
		  
	usbd_cdc_if.c :
	
			/* USER CODE BEGIN INCLUDE */
			extern uint8_t RXbuffer[256];
			extern volatile uint8_t RXbufferStrLen;
			
			/* USER CODE END INCLUDE */
			
			...
			
			
			static int8_t CDC_Receive_FS(uint8_t* Buf, uint32_t *Len)
			{
			  /* USER CODE BEGIN 6 */
			
			  memset (RXbuffer, '\0', sizeof(RXbuffer));  // clear the buffer (to be sure - not necessary)
			  RXbufferStrLen = (uint8_t)*Len;
			  memcpy(RXbuffer, Buf, RXbufferStrLen);  // copy the data to the buffer
			
			  USBD_CDC_SetRxBuffer(&hUsbDeviceFS, &Buf[0]);
			  USBD_CDC_ReceivePacket(&hUsbDeviceFS);
			
			  return (USBD_OK);
			  /* USER CODE END 6 */
			}
		


5. CANBUS - prisluh in izpis sporočilom po IEX-2 protokolu

Aktivira se CANBUS naprava z "odprtim" filtrom - torej sprejema čisto vsa sporočila.

 
Datoteke :
- main.c
- iex.c/.h - protokol IEX-2

