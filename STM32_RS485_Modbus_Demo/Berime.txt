Demo projekt za USB VComPort, blinkanje LED diod in branje modre tipke
     tipka je na PA0 in se njeno stanje zapiše na LED diodo (modro)

Dodano je tudi sprejemanje nizov preko USB VCOMPorta.

Dodana je tudi MODBUS Demo povezava s PCjem preko USB VCOMPorta.

Postopek :

1. New project -> STM32 Project -> Board -> 407DISC1
2. CubeMX: Spremeniti USB Host v USB Device :
	Connectivity -> USB_OTG_FS -> Mode v Device Only
	Middleware   -> DEVICE_USB in Class Virtual Com Port
	
3. generirati kodo in dodati naslednje odseke :
	main.c :
		izpis na Micro-USB port 
			/* USER CODE BEGIN PV */
			#define BUFSIZE 256
			char SendBuffer[BUFSIZE];
			
			/* USER CODE END PV */
			
			v glavni zanki :
			snprintf (SendBuffer,BUFSIZE,"USB:2 secs\r\n");
	    	CDC_Transmit_FS(SendBuffer,strlen(SendBuffer));

      		HAL_Delay(2000);
			
		LED diode
			zacetno stanje :
			  /* USER CODE BEGIN 2 */
			  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12,1);
			  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13,0);
			  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_14,1);
			  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15,0);
			
			  /* USER CODE END 2 */
			
			
			glavna zanka :	
			
				  /* USER CODE BEGIN WHILE */
				  while (1)
				  {
				
					 HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_12);
					 HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_13);
					 HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_14);
				
					 KeyState = HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_0);
					 HAL_GPIO_WritePin(GPIOD, GPIO_PIN_15, KeyState);
				
				
					  snprintf(SendBuffer,BUFSIZE,"Hello World [%d]: Key:%d\r\n",Counter++,KeyState);
					  CDC_Transmit_FS(SendBuffer,strlen(SendBuffer));
				
				    /* USER CODE END WHILE */
				
				    /* USER CODE BEGIN 3 */
					  HAL_Delay(1000);
				  }
				  /* USER CODE END 3 */
				  
				  
4. sprejemanje znakov/nizov preko USB Virtual COM Port :
				  
	main.c :
					  
		/* USER CODE BEGIN PV */
		#define BUFSIZE 256
		...
		uint8_t RXbuffer[BUFSIZE];
		volatile uint8_t RXbufferStrLen=0;
		
		/* USER CODE END PV */
		
		  /* Infinite loop */
		  /* USER CODE BEGIN WHILE */
		  while (1)
		  {
		
		...
		
		      // Receive over USB Virtual ComPort
			  if (RXbufferStrLen > 0) {
		
				  snprintf(SendBuffer,BUFSIZE,"USB Shell RX: %s\r\n\0",RXbuffer);
				  CDC_Transmit_FS(SendBuffer,strlen(SendBuffer));
				  RXbufferStrLen = 0;
			  }
		
		    /* USER CODE END WHILE */
		
		    /* USER CODE BEGIN 3 */
		  }
		  
	usbd_cdc_if.c :
	
			/* USER CODE BEGIN INCLUDE */
			extern uint8_t RXbuffer[256];
			extern volatile uint8_t RXbufferStrLen;
			
			/* USER CODE END INCLUDE */
			
			...
			
			
			static int8_t CDC_Receive_FS(uint8_t* Buf, uint32_t *Len)
			{
			  /* USER CODE BEGIN 6 */
			
			  memset (RXbuffer, '\0', sizeof(RXbuffer));  // clear the buffer (to be sure - not necessary)
			  RXbufferStrLen = (uint8_t)*Len;
			  memcpy(RXbuffer, Buf, RXbufferStrLen);  // copy the data to the buffer
			
			  USBD_CDC_SetRxBuffer(&hUsbDeviceFS, &Buf[0]);
			  USBD_CDC_ReceivePacket(&hUsbDeviceFS);
			
			  return (USBD_OK);
			  /* USER CODE END 6 */
			}
		


5. MODBUS DEMO komunikacija

Rešitev temelji na dveh projektih :
- FreemMODBUS knjižnica
	- Middlewares/Modbus
	
- in dodatek za Master funkcionalnost
	- temelji na viru: https://github.com/armink/FreeModbus_Slave-Master-RTT-STM32
	- predelano za USB VCOMPort komunikacijo in lastne podatkovne strukture
	
- Modbus Slave (server) simuliramo na PC strani z aplikacijo :
	- https://sourceforge.net/projects/modrssim2/
	- izberemo ustrezen COM port (VCOMPort od STM32F4)
	
- Odlična razlaga protokola in poteka komunikacije
	Modbus RTU made simple with detailed descriptions and examples

	Z naslova <https://ipc2u.com/articles/knowledge-base/modbus-rtu-made-simple-with-detailed-descriptions-and-examples/> 

	 
Spremembe :
- main.c
- mbxxxxx_m.c v mapi functions (master funkcije, dodane v drugem omenjenem projektu.
   (predelava na USB VCOMPort in enostavnejšo uporabo)
   
	 
